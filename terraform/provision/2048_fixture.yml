---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-2048
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: app-2048
  replicas: 2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app-2048
      annotations:
        appmesh.k8s.aws/secretMounts: ca-key-pair:/etc/keys/2048/
    spec:
      serviceAccountName: appmesh-pod
      containers:
      - image: alexwhen/docker-2048
        imagePullPolicy: Always
        name: app-2048
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: service-2048
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: ClusterIP
  selector:
    app.kubernetes.io/name: app-2048
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualNode
metadata:
  namespace: default
  name: deployment-2048
spec:
  awsName: deployment-2048-virtual-node
  podSelector:
    matchLabels:
      app.kubernetes.io/name: app-2048
  listeners:
    - portMapping:
        port: 80
        protocol: http
  serviceDiscovery:
    dns:
      hostname: service-2048.default.svc.cluster.local
  backendDefaults:
    clientPolicy:
      tls:
        enforce: true
        validation:
          trust:
            file:
              certificateChain: /etc/keys/2048/ca.crt
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualService
metadata:
  namespace: default
  name: service-2048
spec:
  awsName: service-2048-virtual-service
  provider:
    virtualNode:
      virtualNodeRef:
        name: deployment-2048
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualGateway
metadata:
  name: gw-2048
  namespace: default
spec:
  backendDefaults:
    clientPolicy:
      tls:
        enforce: true
        validation:
          trust:
            file:
              certificateChain: /etc/keys/2048/ca.crt
  namespaceSelector:
    matchLabels:
      mesh: default
  # podSelector:
  #   matchLabels:
  #     app.kubernetes.io/name: app-2048
  gatewayRouteSelector:
    matchLabels:
      gateway: gw-2048
  listeners:
    - portMapping:
        port: 80
        protocol: http
      tls:
        certificate:
          file:
            certificateChain: /etc/keys/2048/tls.crt
            privateKey: /etc/keys/2048/tls.key
        mode: STRICT
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: GatewayRoute
metadata:
  name: gateway-route
  namespace: default
  labels:
    gateway: gw-2048
spec:
  httpRoute:
    match:
      prefix: "/"
    action:
      target:
        virtualService:
          virtualServiceRef:
            name: service-2048
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-2048
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: service-2048
            port: 
              number: 80
